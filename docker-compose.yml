version: "3.8"

services:
  app: &app
    build:
      context: .dockerdev
      dockerfile: Dockerfile
      args:
        PROJECT_NAME: ${PROJECT_NAME}
        RUBY_VERSION: ${RUBY_VERS}
        NODE_VERSION: ${NODE_VERS}
        YARN_VERSION: ${YARN_VERS}
        BUNDLER_VERSION: ${BUNDLER_VERS}
        RAILS_VERSION: ${RAILS_VERS}
    image: ${PROJECT_NAME}:${PROJECT_VERS}
    tmpfs:
      - /tmp

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=postgres://postgres:postgres@postgress:5432
      - WEBPACKER_DEV_SERVER_HOST=webpacker
    volumes:
      - .:/${PROJECT_NAME}:cached
      - bundle:/usr/local/bundle
      - node_modules:/${PROJECT_NAME}/node_modules
      - packs:/${PROJECT_NAME}/public/packs
    depends_on:
      postgres:
        condition: service_healthy

  shell:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'

  rails:
    <<: *backend
    command: rails server -b 0.0.0.0 -P tmp/pids/dev_server.pid
    ports:
      - '3000:3000'

  rails-test: 
    <<: *backend
    command: rails server -b 0.0.0.0 -p ${TEST_PORT} -P tmp/pids/test_server.pid
    environment:
      - RAILS_ENV=test
      - WEBPACKER_DEV_SERVER_HOST=webpacker
    ports:
      - ${TEST_PORT}:${TEST_PORT}
    depends_on:
      - selenium

  rspec:
    <<: *backend
    command: bundle exec rspec ${TARGET}
    environment:
      - SELENIUM_REMOTE_HOST=selenium
      - HEADLESS=true
    depends_on:
      - selenium

  rspec-browser:
    <<: *backend
    command: bundle exec rspec ${TARGET}
    environment:
      - SELENIUM_REMOTE_HOST=selenium
      - HEADLESS=false
    depends_on:
      - rails-test

  postgres:
    image: postgres:${PG_VERS}
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      - PSQL_HISTFILE=/root/log/.psql_history
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  selenium:
    image: selenium/standalone-chrome
    ports:
      - '4444:4444'

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - .:/${PROJECT_NAME}:cached
      - bundle:/usr/local/bundle
      - node_modules:/${PROJECT_NAME}/node_modules
      - packs:/${PROJECT_NAME}/public/packs
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0


volumes:
  postgres:
  bundle:
    external:
      name: ${PROJECT_NAME}_${GEMSET_VERS}_bundle
  node_modules:
    external:
      name: ${PROJECT_NAME}_${NODE_MODULES_VERS}_node_modules
  packs:
